/* David Horowtiz and Alex Schlumph */
/* Semiprime numbers are natural numbers that are products of exactly two 
(possibly equal) prime numbers. This program prints all semiprime numbers up to 300,
and then all non-semiprime numbers up to 300. */


struct Primes {
    int[] semiprime;
    int[] not_semiprime
}

int mod(int a, int b)
{
    while(a >= b) {
        a = a - b;
    }
    return a;
}

int div(int a, int b)
{
    var c = 0;
    while(a >= b) {
        a = a - b;
        c = c + 1;
    }
    return c;
}

bool semiprime(int c)
{
    var a = 2;
    var b = 0;
    while (b < 3 & c != 1)
    {
        if (mod(c, a) == 0)
        {
            c = div(c, a);
            b = b + 1;
        } else {
            a = a + 1;
        }
    }
    return b == 2;
}
int program(int argc, string[] argv)
{   
    var prime_storage = new Primes {semiprime = new int[300] {i -> 0}; not_semiprime = new int[300] {i -> 0}};
	var semi_count = 0;
    var not_count = 0;

    for (var i = 2; i < 300; i = i + 1;) {
		if (semiprime(i)) {
            prime_storage.semiprime[semi_count] = i;
            semi_count = semi_count + 1;
            
        } else {
            prime_storage.not_semiprime[not_count] = i;
            not_count = not_count + 1;
        }
    }
    
    var i = 0;
    print_string("Semiprimes: ");

    while(prime_storage.semiprime[i] != 0) {
        print_int(prime_storage.semiprime[i]);
        print_string(" ");
        i = i + 1;
    }

    i = 0;
    print_string("\nOthers: ");

    while(prime_storage.not_semiprime[i] != 0) {
        print_int(prime_storage.not_semiprime[i]);
        print_string(" ");
        i = i + 1;
    }
    print_string("\n");   

	return 0;
}